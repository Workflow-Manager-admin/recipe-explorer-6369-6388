{"is_source_file": true, "format": "Python", "description": "This file sets up database connectivity using SQLAlchemy in an asynchronous FastAPI application. It loads environment variables, configures the database engine, and provides a dependency function for database session management.", "external_files": ["sqlalchemy.ext.asyncio", "sqlalchemy.ext.declarative", "sqlalchemy.orm", "dotenv"], "external_methods": ["load_dotenv", "os.environ.get"], "published": ["get_db"], "classes": [{"name": "AsyncSession", "description": "Asynchronous database session class from SQLAlchemy."}, {"name": "Base", "description": "Declarative base class for ORM models."}], "methods": [{"name": "get_db()", "description": "Asynchronous generator providing a database session for dependency injection.", "scope": "", "scopeKind": ""}], "calls": ["load_dotenv", "os.environ.get", "create_async_engine", "sessionmaker", "async with async_session()", "yield session"], "search-terms": ["AsyncSession", "create_async_engine", "sessionmaker", "database connection", "SQLAlchemy async setup", "FastAPI dependency", "dotenv environment loading"], "state": 2, "file_id": 6, "knowledge_revision": 21, "git_revision": "bf8c6e846df5a67727f7f350f1e901318c1a421d", "ctags": [{"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/recipe-explorer-6369-6388/recipe_backend/src/api/db.py", "pattern": "/^Base = declarative_base()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DB_URL", "path": "/home/kavia/workspace/code-generation/recipe-explorer-6369-6388/recipe_backend/src/api/db.py", "pattern": "/^DB_URL = os.environ.get(\"DATABASE_URL\")  # Should be set as an env variable$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "async_session", "path": "/home/kavia/workspace/code-generation/recipe-explorer-6369-6388/recipe_backend/src/api/db.py", "pattern": "/^async_session = sessionmaker($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/recipe-explorer-6369-6388/recipe_backend/src/api/db.py", "pattern": "/^engine = create_async_engine(DB_URL, echo=False, future=True)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/recipe-explorer-6369-6388/recipe_backend/src/api/db.py", "pattern": "/^async def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "df1e5d07476577d317f1c22d75e0344a", "format-version": 4, "code-base-name": "recipe_backend", "filename": "recipe_backend/src/api/db.py", "fields": [{"name": "Base = declarative_base()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DB_URL = os.environ.get(\"DATABASE_URL\")  # Should be set as an env variable", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "async_session = sessionmaker(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "engine = create_async_engine(DB_URL, echo=False, future=True)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"21": "bf8c6e846df5a67727f7f350f1e901318c1a421d"}]}